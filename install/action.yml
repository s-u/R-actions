name: 'Install R'
description: 'Installs R'
inputs:
  r-version:
    description: 'Desired R version. Only release and devel are guaranteed to work.'
    required: false
    default: 'release'
  tools:
    description: 'Type of the toolchain to install (currently only relevant on Windows), set to "none" to skip toolchain installation'
    required: false
    default: 'none'

runs:
  using: 'composite'
  steps:
   - name: Install R
     run: |
       # Install R
       # Connectivity can be flaky, so allow retries
       RCURL='curl --retry 4 -fsSL'
       if [ ${{ runner.os }} = Linux ]; then
         . /etc/os-release
         ## form OS like ubuntu-22.04
         OS="${ID}-${VERSION_ID}"
         echo "Installing R-${{ inputs.r-version }}-$OS"
         $RCURL \
           "https://github.com/s-u/R-build/releases/download/${{ inputs.r-version }}-build/R-${{ inputs.r-version }}-${OS}.tar.xz" \
           | xzcat | sudo tar fx - -C /
       fi
       if [ ${{ runner.os }} = macOS ]; then
         ARCH=`uname -m`
         echo "Installing R-${{ inputs.r-version }}-$ARCH"
         if uname -r | grep ^1 >/dev/null; then ## high-sierra build
           $RCURL \
             "https://mac.r-project.org/high-sierra/last-success/R-${{ inputs.r-version }}-${ARCH}.tar.xz" \
             | sudo tar fxj - -C /Library/Frameworks/
         else # big-sur
           $RCURL \
             "https://mac.r-project.org/big-sur/last-success/R-${{ inputs.r-version }}-${ARCH}.tar.xz" \
             | sudo tar fxj - -C /Library/Frameworks/
         fi
         sudo ln -sfn  /Library/Frameworks/R.framework/Resources/bin/R /usr/local/bin/R
         sudo ln -sfn  /Library/Frameworks/R.framework/Resources/bin/Rscript /usr/local/bin/Rscript
         if [ -e /opt/homebrew/bin/R ]; then
           echo Removing Homebrew R ...
           for i in R Rscript; do rm -f /opt/homebrew/bin/$i; done
         fi
         if [ ! -e /opt/R ]; then
           sudo mkdir /opt/R
           sudo chown $USER /opt/R
           mkdir -p /opt/R/$ARCH/bin
           for i in R Rscript; do ln -s /Library/Frameworks/R.framework/Resources/bin/$i /opt/R/$ARCH/bin/$i; done
         fi
         # prepend /opt/R to future PATHs
         echo /opt/R/$ARCH/bin > newPATH
         cat $GITHUB_PATH >> newPATH
         cat newPATH > $GITHUB_PATH
         rm -f newPATH
         # make sure site-library exists and is writable (unlike R.home itself)
         sudo mkdir /Library/Frameworks/R.framework/Resources/site-library
         sudo chown $USER /Library/Frameworks/R.framework/Resources/site-library
       fi
       if [ ${{ runner.os }} = Windows ]; then
         echo Downloading R-${{ inputs.r-version }}.exe
         $RCURL -o rinst.exe \
           "https://cloud.r-project.org/bin/windows/base/R-${{ inputs.r-version }}.exe"
         if [ ! -x rinst.exe ] ; then
           echo "::error ::ERROR: failed to download R installer"
           exit 1
         fi
         echo Installing R
         ./rinst.exe //VERYSILENT //SUPPRESSMSGBOXES //CURRENTUSER //DIR=`cygpath -wa ~/r`
         rm -f rinst.exe
         if [ ! -x ~/r/bin/R.exe ] ; then
           echo "::error ::ERROR: failed to install R"
           exit 1
         fi
         echo ~/r/bin >> $GITHUB_PATH
         # Prevent interference from pre-installed R
         echo "R_LIBS_USER=NULL" >> $GITHUB_ENV
         echo "R_LIBS_SITE=NULL" >> $GITHUB_ENV
       fi
     shell: bash

   - name: Install Tools
     if: ${{ runner.os == 'Windows' && inputs.tools != 'none' }}
     uses: kalibera/ucrt3/actions/toolchain-install@main
     with:
       toolchain-type: ${{ inputs.tools }}
